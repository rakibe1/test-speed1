// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  speedTests    SpeedTest[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SpeedTest {
  id            String   @id @default(cuid())
  userId        String?
  downloadSpeed Float
  uploadSpeed   Float
  ping          Float
  serverInfo    String?
  location      String?
  ipAddress     String?
  userAgent     String?
  createdAt     DateTime @default(now())
  
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SystemStats {
  id              String   @id @default(cuid())
  date            DateTime @unique
  totalTests      Int      @default(0)
  totalUsers      Int      @default(0)
  averageDownload Float?
  averageUpload   Float?
  averagePing     Float?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
